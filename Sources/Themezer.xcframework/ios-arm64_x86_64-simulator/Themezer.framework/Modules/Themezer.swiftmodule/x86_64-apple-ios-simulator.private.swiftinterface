// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target x86_64-apple-ios17.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Themezer
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
@_exported import Themezer
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol Themeable {
  var id: Swift.String { get }
  var name: Swift.String { get }
  var labelAssets: any Themezer.LabelAssets { get }
  var buttonAssets: any Themezer.ButtonAssets { get }
  var segmentedControlAssets: any Themezer.SegmentedControlAssets { get }
  init()
}
public protocol LabelAssets {
  var textColor: UIKit.UIColor { get }
}
public protocol ButtonAssets {
  var textColor: UIKit.UIColor { get }
  var backgroundColor: UIKit.UIColor { get }
}
public protocol SegmentedControlAssets {
  var selectedSegmentTintColor: UIKit.UIColor { get }
}
@_hasMissingDesignatedInitializers public class ThemeManager {
  public static var shared: Themezer.ThemeManager
  public var themes: [any Themezer.Themeable] {
    get
  }
  public var theme: any Themezer.Themeable {
    get
  }
  public func register(themeType: any Themezer.Themeable.Type)
  public func config()
  public func apply(_ theme: any Themezer.Themeable)
  @objc deinit
}
